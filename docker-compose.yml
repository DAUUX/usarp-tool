version: '3.8'

services:
  backend:
    depends_on:
      - db
    build: ./backend
    ports:
      - "${LOCAL_NODE_PORT}:${DOCKER_NODE_PORT}"
    env_file: .env
    environment:
      JWT_SECRET: ${JWT_SECRET_KEY}
      LOCAL_NODE_PORT: ${LOCAL_NODE_PORT}
      DOCKER_NODE_PORT: ${DOCKER_NODE_PORT}
      LOCAL_DB_PORT: ${LOCAL_DB_PORT}
      DOCKER_DB_PORT: ${DOCKER_DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DIALECT: ${DIALECT}
      CORS_ORIGIN: ${CORS_ORIGIN}
    restart: always
    stdin_open: true
    tty: true
    networks:
      - usarptool-network

  db:
    image: mariadb:10.4.14
    container_name: mariadb
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${LOCAL_DB_PORT}:${DOCKER_DB_PORT}"
    volumes:
      - mariadb-data:/var/lib/mysql
    networks:
      - usarptool-network

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    ports:
      - "${FRNTEND_PORT}:80"
    networks:
      - usarptool-network

networks:
  usarptool-network:
    driver: bridge

volumes:
  mariadb-data:
